name: Standard build deploy workflow for Kotlin Lambda JS example

on:
  workflow_call:
    inputs:
      aws_region:
        required: false
        type: string
        default: "eu-west-1"
    secrets:
      aws_account_id:
        required: true
      aws_access_key:
        required: true
      aws_secret_key:
        required: true

env:
  # Supply target AWS account here
  DEPLOY_TARGET_ACCOUNT: ${{ secrets.aws_account_id }}
  DEPLOY_TARGET_REGION: ${{ inputs.aws_region }}

jobs:
  deploy-table:
    runs-on: ubuntu-latest
    needs: [ build ]
    name: Table deploy

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.aws_access_key }}
          aws-secret-access-key: ${{ secrets.aws_secret_key }}
          aws-region: ${{ inputs.aws_region }}

      - name: DEPLOY synthesize & deploy
        run: |
          cd ${GITHUB_WORKSPACE}/infrastructure
          npm install
          npm run build
          npx cdk deploy -vv --require-approval never Kotlin-Lambda-JS-table --exclusively

  deploy-app:
    runs-on: ubuntu-latest
    needs: [ build, deploy-table ]
    strategy:
      matrix:
        config:
          [
            {
              component-name: "Kotlin Lambda JS ",
              stack-name: "Kotlin-Lambda-JS-example",
            },
            {
              component-name: "Kotlin Lambda JS Arm64",
              stack-name: "Kotlin-Lambda-JS-Arm64-example",
            },
          ]
    name: ${{ matrix.config.component-name }} deployment

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.aws_access_key }}
          aws-secret-access-key: ${{ secrets.aws_secret_key }}
          aws-region: ${{ inputs.aws_region }}

      - name: DEPLOY synthesize & deploy
        run: |
          cd ${GITHUB_WORKSPACE}/infrastructure
          npm install
          npm run build
          npx cdk deploy -vv --require-approval never ${{ matrix.config.stack-name }} --exclusively